openapi: 3.0.0
info:
  title: Trace V2 Auth API
  version: 1.0.0
  description: API documentation for the authentication service.
servers:
  - url: https://tracev2.barikoimaps.dev

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - BearerAuth: []

tags:
  - name: Auth
    description: Authentication related endpoints
  - name: Users
    description: User related endpoints
  - name: Realtime Tracking
    description: Realtime tracking related endpoints
paths:
  /auth/login:
    post:
      tags:
        - Auth
      summary: User login
      description: Login a user with email and password.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: saad@barikoi.com
                password:
                  type: string
                  example: 12345678
      responses:
        200:
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        401:
          description: Unauthorized
        400:
          description: Bad Request

  /auth/user:
    get:
      tags:
        - Auth
      summary: Retrieve user information
      description: Fetch user details using the authorization token.
      security:
        - BearerAuth: []
      responses:
        200:
          description: Successfully retrieved user information
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 65a3cba29f7b07fa470550bb
                  name:
                    type: string
                    example: Saad Barikoi
                  email:
                    type: string
                    example: saad@barikoi.com
                  user_type:
                    type: string

  /users/all:
    get:
      tags:
        - Users
      summary: Retrieve all users
      description: Fetch all users' details using the authorization token.
      security:
        - BearerAuth: []
      responses:
        200:
          description: Successfully retrieved all users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 65a3cba29f7b07fa470550bb
                    name:
                      type: string
                      example: Saad Barikoi
                    email:
                      type: string
                      example: saad@barikoi.com
                    user_type:
                      type: string
                      example: ADMIN
        401:
          description: Unauthorized

  /users/{id}:
    get:
      tags:
        - Users
      summary: Retrieve user by ID
      description: Fetch user details by ID using the authorization token.
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: User ID
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved user by ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 65a3cba29f7b07fa470550bb
                  name:
                    type: string
                    example: Saad Barikoi
                  email:
                    type: string
                    example: saad@barikoi.com

  /realtime-trip/create:
    post:
      tags:
        - Realtime Tracking
      summary: Create a realtime trip
      description: Create a new realtime trip for a user.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  example: 65a3cba29f7b07fa470550bb
                fieldforce_id:
                  type: string
                  example: 65a3cba29f7b07fa47054fa8
                address:
                  type: string
                  example: matikata rd basa 572/k barikoi
                api_key:
                  type: string
                  example: api_key
      responses:
        200:
          description: Successfully created a realtime trip
          content:
            application/json:
              schema:
                type: object
                properties:
                  trip_id:
                    type: string
                    example: 65a3cba29f7b07fa470550
        401:
          description: Unauthorized
        400:
          description: Bad Request
  /realtime-trip/start:
    post:
      tags:
        - Realtime Tracking
      summary: Start a realtime trip
      description: Start a realtime trip for a user.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                trip_id:
                  type: string
                  example: 66bb3ef8119f4a96927a32
                fieldforce_id:
                  type: string
                  example: 65a3cba29f7b07fa47054f
                api_key:
                  type: string
                  example: api_key
      responses:
        200:
          description: Successfully started a realtime trip
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Trip started successfully
        401:
          description: Unauthorized
        400:
          description: Bad Request